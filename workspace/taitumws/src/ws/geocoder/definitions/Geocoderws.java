
package ws.geocoder.definitions;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import ws.geocoder.schemas.Address;
import ws.geocoder.schemas.Coordinate;
import ws.geocoder.schemas.Distance;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "geocoderws", targetNamespace = "http://geocoder.ws/definitions")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ws.geocoder.definitions.ObjectFactory.class,
    ws.geocoder.schemas.ObjectFactory.class
})
public interface Geocoderws {


    /**
     * Calculate geographical coordinates of the address of a location (street, city, etc.)
     * 
     * @param address
     * @return
     *     returns ws.geocoder.schemas.Coordinate
     */
    @WebMethod(action = "http://geocoder.ws/definitions/getCoordinate")
    @WebResult(name = "coordinate", partName = "coordinate")
    public Coordinate getCoordinate(
        @WebParam(name = "address", partName = "address")
        Address address);

    /**
     * Calculate the distance between two points or locations.
     * 
     * @param coordinateDst
     * @param coordinateSrc
     * @return
     *     returns ws.geocoder.schemas.Distance
     */
    @WebMethod(action = "http://geocoder.ws/definitions/getDistance")
    @WebResult(name = "distance", partName = "distance")
    public Distance getDistance(
        @WebParam(name = "coordinateSrc", partName = "coordinateSrc")
        Coordinate coordinateSrc,
        @WebParam(name = "coordinateDst", partName = "coordinateDst")
        Coordinate coordinateDst);

    /**
     * Reverse Geocoding: get the address format: street, high, city, state and country, from its geographical coordinates.
     * 
     * @param coordinate
     * @return
     *     returns ws.geocoder.schemas.Address
     */
    @WebMethod(action = "http://geocoder.ws/definitions/getAddress")
    @WebResult(name = "address", partName = "address")
    public Address getAddress(
        @WebParam(name = "coordinate", partName = "coordinate")
        Coordinate coordinate);

}
