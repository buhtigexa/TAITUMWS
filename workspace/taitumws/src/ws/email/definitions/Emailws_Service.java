
package ws.email.definitions;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * Email Ws allows to send emails from a gmail account. In addition, you can perform the lookup/filtering on sent emails, according to the different data fields email.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "emailws", targetNamespace = "http://email.ws./definitions", wsdlLocation = "http://localhost:8080/emailws/services/emailws?wsdl")
public class Emailws_Service
    extends Service
{

    private final static URL EMAILWS_WSDL_LOCATION;
    private final static WebServiceException EMAILWS_EXCEPTION;
    private final static QName EMAILWS_QNAME = new QName("http://email.ws./definitions", "emailws");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/emailws/services/emailws?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EMAILWS_WSDL_LOCATION = url;
        EMAILWS_EXCEPTION = e;
    }

    public Emailws_Service() {
        super(__getWsdlLocation(), EMAILWS_QNAME);
    }

    public Emailws_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), EMAILWS_QNAME, features);
    }

    public Emailws_Service(URL wsdlLocation) {
        super(wsdlLocation, EMAILWS_QNAME);
    }

    public Emailws_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EMAILWS_QNAME, features);
    }

    public Emailws_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Emailws_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Emailws
     */
    @WebEndpoint(name = "emailws")
    public Emailws getEmailws() {
        return super.getPort(new QName("http://email.ws./definitions", "emailws"), Emailws.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Emailws
     */
    @WebEndpoint(name = "emailws")
    public Emailws getEmailws(WebServiceFeature... features) {
        return super.getPort(new QName("http://email.ws./definitions", "emailws"), Emailws.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EMAILWS_EXCEPTION!= null) {
            throw EMAILWS_EXCEPTION;
        }
        return EMAILWS_WSDL_LOCATION;
    }

}
